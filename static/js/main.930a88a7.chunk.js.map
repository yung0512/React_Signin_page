{"version":3,"sources":["styles/navbarStyles.js","hooks/useToggleState.js","context/ThemeContext.js","context/LanguageContext.js","Navbar.js","styles/formStyles.js","Form.js","PageContent.js","App.js","reportWebVitals.js","index.js"],"names":["styles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","spacing","unit","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","useToggle","initialVal","useState","state","setState","toggle","ThemeContext","createContext","ThemeProvider","props","useToggleState","isDarkMode","toggleTheme","Provider","value","children","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","e","target","content","english","flag","french","spanish","chinese","withStyles","classes","useContext","className","AppBar","Toolbar","IconButton","Typography","variant","Switch","onChange","InputBase","placeholder","input","main","paper","marginTop","flexDirection","padding","avatar","margin","secondary","form","submit","words","email","signIn","password","remember","Paper","Avatar","Select","MenuItem","FormControl","required","fullWidth","InputLabel","htmlFor","Input","id","name","autoFocus","FormControlLabel","control","Checkbox","label","Button","type","PageContent","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.930a88a7.chunk.js","sourcesContent":["import {fade} from \"@material-ui/core/styles/colorManipulator\"\nconst styles = theme => ({\n    root:{\n        width: \"100%\",\n        marginBottom: 0\n    },\n    grow:{\n        flexGrow: 1\n    },\n    menuButton:{\n        marginLeft: -12,\n        marginRight: 20\n    },\n    title:{\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]:{\n            display: \"block\"\n        }\n    },\n    search:{\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white,0.15),\n        \"&:hover\":{\n            backgroundColor: fade(theme.palette.common.white,0.25)\n        },\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing.unit,\n            width: \"auto\"\n        }\n    },\n    searchIcon:{\n        width: theme.spacing.unit * 9,\n        height: \"100%\" ,\n        position: \"absolute\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    inputRoot:{\n        color:\"inherit\",\n        width:\"100%\"\n    },\n    inputInput:{\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create(\"width\"),\n        width:\"100%\",\n        [theme.breakpoints.up(\"sm\")]:{\n            width: 120,\n            \"&:focus\":{\n                width: 200\n            }\n        }\n    },\n    \n})\nexport default styles","import { useState } from \"react\";\nfunction useToggle(initialVal = false) {\n    const [state, setState] = useState(initialVal)\n    const toggle = () => {\n        setState(!state)\n    }\n    return [state,toggle]\n}\nexport default useToggle","import React , {Component,createContext} from \"react\"\nimport useToggleState from '../hooks/useToggleState'\n\nexport const ThemeContext = createContext()\nexport function ThemeProvider(props){\n    const [isDarkMode, toggleTheme] = useToggleState(false)\n    return(\n        <ThemeContext.Provider value = {{isDarkMode , toggleTheme}}>\n            {props.children}\n        </ThemeContext.Provider>\n         )\n}\n\n\n\n\n\n// export const ThemeContext = createContext()\n\n// export class ThemeProvider extends Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             isDarkMode:false\n//         }\n//         this.toggleTheme = this.toggleTheme.bind(this)\n//     }\n//     toggleTheme(){\n//         this.setState({\n//             isDarkMode:!this.state.isDarkMode\n//         })\n//     }\n//     render(){\n//         return(\n//             <ThemeContext.Provider value = {{...this.state , toggleTheme:this.toggleTheme}}>\n//                 {this.props.children}\n//             </ThemeContext.Provider>\n//         )\n//     }\n// }\n\n","import React ,{Component,createContext,useState} from 'react'\n\nexport const LanguageContext = createContext();\n\n export function LanguageProvider(props){\n    const [language, setLanguage] = useState(\"spanish\")\n    const changeLanguage = (e) => setLanguage(e.target.value)\n    return(\n                     <LanguageContext.Provider value={{language:language,changeLanguage:changeLanguage}}>\n                         {props.children}\n                     </LanguageContext.Provider>\n                 )\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export class LanguageProvider extends Component {\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             language:\"french\"\n//         }\n//         this.changelanguage = this.changelanguage.bind(this)\n//     }\n//     changelanguage(e){\n//         this.setState({\n//             language:e.target.value\n//         })\n//     }\n//     render(){\n//         return(\n//             <LanguageContext.Provider value={{...this.state,changeLanguage:this.changelanguage}}>\n//                 {this.props.children}\n//             </LanguageContext.Provider>\n//         )\n//     }\n// }\n\n// export const withLanguageContext = Component => props => (\n//     <LanguageContext.Consumer>\n//         {value => <Component languageContext={value} {...props}/>}\n//     </LanguageContext.Consumer>\n// )\n","import React , {useContext} from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport InputBase from \"@material-ui/core/InputBase\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport Switch from \"@material-ui/core/Switch\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport styles from \"./styles/navbarStyles\"\nimport {ThemeContext} from \"./context/ThemeContext\"\nimport { LanguageContext } from \"./context/LanguageContext\"\n\nconst content = {\n    english:{\n        search:\"Search\",\n        flag:\"🇺🇸\"\n    },\n    french:{\n        search:\"Chercher\",\n        flag:\"🇫🇷\"\n    },\n    spanish:{\n        search:\"Buscar\",\n        flag:\"🇪🇸\"\n    },\n    chinese:{\n        search:\"搜尋\",\n        flag:\"🇹🇼\"\n    }\n} \nfunction Navbar (props){\n    const {classes} = props\n    const {isDarkMode , toggleTheme} = useContext(ThemeContext)\n    const {language} = useContext(LanguageContext)\n    const {search,flag} = content[language]\n    return(\n        <div className={classes.root}>\n            <AppBar position=\"static\" color={isDarkMode?\"default\":\"primary\"}>\n                <Toolbar>\n                    <IconButton \n                        className={classes.menuButton} \n                        color=\"inherit\"\n                    >\n                        <span> {flag} </span>\n                    </IconButton>\n                    <Typography \n                        className={classes.title} \n                        variant=\"h6\" \n                        color=\"inherit\"\n                    >\n                        APP Title \n                    </Typography>\n                    <Switch onChange={toggleTheme}/>\n                    <div className={classes.grow}/>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase \n                            placeholder={`${search}...`}\n                            classes={{\n                                root:classes.inputRoot,\n                                input:classes.inputInput\n                            }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n        )\n}\n\n// class Navbar extends Component {\n//     static contextType = ThemeContext;\n\n//     render(){\n//         const {classes} = this.props\n//         const {isDarkMode , toggleTheme} = this.context\n//         const {language} = this.props.languageContext\n//         const {search,flag} = content[language]\n//         return(\n//             <div className={classes.root}>\n//                 <AppBar position=\"static\" color={isDarkMode?\"default\":\"primary\"}>\n//                     <Toolbar>\n//                         <IconButton \n//                             className={classes.menuButton} \n//                             color=\"inherit\"\n//                         >\n//                             <span> {flag} </span>\n//                         </IconButton>\n//                         <Typography \n//                             className={classes.title} \n//                             variant=\"h6\" \n//                             color=\"inherit\"\n//                         >\n//                             APP Title \n//                         </Typography>\n//                         <Switch onChange={toggleTheme}/>\n//                         <div className={classes.grow}/>\n//                         <div className={classes.search}>\n//                             <div className={classes.searchIcon}>\n//                                 <SearchIcon />\n//                             </div>\n//                             <InputBase \n//                                 placeholder={`${search}...`}\n//                                 classes={{\n//                                     root:classes.inputRoot,\n//                                     input:classes.inputInput\n//                                 }}\n//                             />\n//                         </div>\n//                     </Toolbar>\n//                 </AppBar>\n//             </div>\n//             )\n//     }\n// }\n\nexport default withStyles(styles)(Navbar); ","const styles = theme => ({\n    main:{\n        width: \"auto\",\n        display: \"block\",\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(\"sm\")]:{\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    paper:{\n        marginTop: theme.spacing.unit * 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`\n    },\n    avatar:{\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width:\"100%\",\n        marginTop: theme.spacing.unit * 3\n    },\n    submit:{\n        marginTop: theme.spacing.unit * 3\n    }\n})\nexport default styles","import React ,{ useContext} from 'react'\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Button from \"@material-ui/core/Button\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Input from \"@material-ui/core/Input\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Select from \"@material-ui/core/Select\"\nimport withStyles from \"@material-ui/core/styles/withStyles\"\nimport styles from \"./styles/formStyles\"\nimport {LanguageContext} from \"./context/LanguageContext\"\n\nconst words = {\n    english:{\n        email:\"Email\",\n        signIn:\"Sign in\",\n        password:\"password\",\n        remember:\"Remember Me\"\n    },\n    french:{\n        email:\"Adresse Electronique\",\n        signIn:\"Se Connecter\",\n        password:\"Mot de Passe\",\n        remember:\"Souviens-toi De Moi\"\n    },\n    spanish:{\n        email:\"correo Electronico\",\n        signIn:\"Registrase\",\n        password:\"Contrasena\",\n        remember:\"Recuerdame\"\n    },\n    chinese:{\n        email:\"電子信箱\",\n        signIn:\"登入\",\n        password:\"密碼\",\n        remember:\"記住我\"\n    }\n}\nfunction Form(props){\n    const {language,changeLanguage} = useContext(LanguageContext)\n    const {classes} = props\n    const {email,signIn,password,remember} = words[language]\n    return(\n        <main className={classes.main}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography variant=\"h5\">{signIn}</Typography>\n                <Select value={language} onChange={changeLanguage}>\n                    <MenuItem value=\"english\">English</MenuItem>\n                    <MenuItem value=\"french\">French</MenuItem>\n                    <MenuItem value=\"spanish\">Spanish</MenuItem>\n                    <MenuItem value=\"chinese\">繁體中文</MenuItem>\n                </Select>\n                <form className={classes.form}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">{email}</InputLabel>\n                        <Input id=\"email\" name=\"email\" autoFocus></Input>\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">{password}</InputLabel>\n                        <Input id=\"password\" name=\"password\" autoFocus></Input>\n                    </FormControl>\n                    <FormControlLabel \n                        control={<Checkbox color=\"primary\"/>}\n                        label={remember}\n                    />\n                    <Button \n                        variant=\"contained\" \n                        type=\"submit\"\n                        className={classes.submit} \n                        fullWidth\n                    >{signIn}\n                    </Button>\n                </form>\n            </Paper>\n        </main>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n// class Form extends Component {\n//     static contextType = LanguageContext\n//    render(){\n//        const {classes} = this.props\n//        const {language,changeLanguage} = this.context\n//        const {email,signIn,password,remember} = words[language]\n//        return(\n//             <main className={classes.main}>\n//                 <Paper className={classes.paper}>\n//                     <Avatar className={classes.avatar}>\n//                         <LockOutlinedIcon/>\n//                     </Avatar>\n//                     <Typography variant=\"h5\">{signIn}</Typography>\n//                     <Select value={language} onChange={changeLanguage}>\n//                         <MenuItem value=\"english\">English</MenuItem>\n//                         <MenuItem value=\"french\">French</MenuItem>\n//                         <MenuItem value=\"spanish\">Spanish</MenuItem>\n//                     </Select>\n//                     <form className={classes.form}>\n//                         <FormControl margin=\"normal\" required fullWidth>\n//                             <InputLabel htmlFor=\"email\">{email}</InputLabel>\n//                             <Input id=\"email\" name=\"email\" autoFocus></Input>\n//                         </FormControl>\n//                         <FormControl margin=\"normal\" required fullWidth>\n//                             <InputLabel htmlFor=\"password\">{password}</InputLabel>\n//                             <Input id=\"password\" name=\"password\" autoFocus></Input>\n//                         </FormControl>\n//                         <FormControlLabel \n//                             control={<Checkbox color=\"primary\"/>}\n//                             label={remember}\n//                         />\n//                         <Button \n//                             variant=\"contained\" \n//                             type=\"submit\"\n//                             className={classes.submit} \n//                             fullWidth\n//                         >{signIn}\n//                         </Button>\n//                     </form>\n//                 </Paper>\n//             </main>\n//        )\n//    } \n// }\nexport default withStyles(styles)(Form)","import React, {Component,useContext} from 'react'\nimport {ThemeContext} from \"./context/ThemeContext\"\nfunction PageContent(props){\n    const {isDarkMode} = useContext(ThemeContext);\n    const styles={\n        backgroundColor: isDarkMode? \"black\":\"white\",\n        height: \"100vh\",\n        width: \"100vw\"\n    }\n    return (\n            <div style={styles}>\n                {props.children}\n            </div>\n    )\n}\nexport default PageContent","import Navbar from \"./Navbar\"\nimport Form from \"./Form\"\nimport PageContent from \"./PageContent\"\nimport {ThemeProvider} from \"./context/ThemeContext\"\nimport {LanguageProvider} from \"./context/LanguageContext\"\nfunction App() {\n  return (   \n      <ThemeProvider>\n        <PageContent>\n          <LanguageProvider>\n            <Navbar />\n            <Form /> \n          </LanguageProvider>\n        </PageContent>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}